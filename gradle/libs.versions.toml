[versions]
# Plugins
plugin-android = "8.1.2" # https://developer.android.com/studio/releases/gradle-plugin
plugin-compose = "1.5.10" # https://github.com/JetBrains/compose-jb

# Multiplatform
kotlin = "1.9.20"
coroutines = "1.7.3"
serialization = "1.5.1"
libres = "1.2.2"
ktor = "2.3.2"

# Libraries
odyssey = "1.3.40"
kviewmodel = "0.14"
sqldelight = "2.0.0-alpha05"
settings = "1.0.0-RC"
coil = "2.2.2"
androidx-appcompat = "1.6.1"
androidx-activityCompose = "1.8.1"

[libraries]
plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-android = { module = "com.android.tools.build:gradle", version.ref = "plugin-android" }
plugin-compose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "plugin-compose" }

ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-http = { module = "io.ktor:ktor-http", version.ref = "ktor" }

kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }

sqldelight-coroutines-extensions = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-android-driver = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native-driver = { module = "com.squareup.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-sqlite-driver = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqldelight" }

multiplatform-settings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }
multiplatform-settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "settings" }

coil-core = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

kodein-di = "org.kodein.di:kodein-di:7.20.2"

compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "plugin-compose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "plugin-compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "plugin-compose" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "plugin-compose" }
compose-icons = { module = "androidx.compose.material:material-icons-core", version.ref = "plugin-compose" }

kviewmodel-core = { module = "com.adeo:kviewmodel", version.ref = "kviewmodel" }
kviewmodel-compose = { module = "com.adeo:kviewmodel-compose", version.ref = "kviewmodel" }
kviewmodel-odyssey = { module = "com.adeo:kviewmodel-odyssey", version.ref = "kviewmodel" }

odyssey-core = { module = "io.github.alexgladkov:odyssey-core", version.ref = "odyssey" }
odyssey-compose = { module = "io.github.alexgladkov:odyssey-compose", version.ref = "odyssey" }

androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }

[plugins]
android = { id = "com.android.application", version.ref = "plugin-android" }
kotlin = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "plugin-compose" }
libres = { id = "io.github.skeptick.libres", version.ref = "libres" }